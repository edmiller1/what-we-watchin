{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/what-we-watchin/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Nav from \"./components/Nav.js\";\nimport MovieCard from \"./components/MovieCard.js\";\nimport History from \"./components/History.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/app.scss\";\nimport Modal from \"./components/Modal.js\";\n\nfunction App() {\n  _s();\n\n  //state\n  const [historyIsOpen, sethistoryIsOpen] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  let [pageNum, setPageNum] = useState(1);\n  const [movieStatus, setMovieStatus] = useState(\"\");\n  let [movieList, setMovieList] = useState([]);\n  const [showMovieModal, setShowMovieModal] = useState(false);\n  let [movie, setMovie] = useState({});\n  const [movieDetails, setMovieDetails] = useState(); //Arrays\n\n  const [likedArray, setLikedArray] = useState([]);\n  const [unlikedArray, setUnlikedArray] = useState([]);\n  const [seenArray, setSeenArray] = useState([]); //useEffect\n\n  useEffect(() => {\n    getMovies();\n  }, []); //functions\n\n  /*   const getMovies = async () => {\n    for (let i = 1; i <= 2; i++) {\n      const response = await fetch(\n        \"https://api.themoviedb.org/3/movie/popular?api_key=0babab01bb1ea08c91f4f577372025d6&language=en-US&page=\" +\n          pageNum +\n          \"&region=US\"\n      );\n      let data = await response.json();\n      for (let key in data.results) {\n        movieList.push(data.results[key]);\n      }\n      setMovieList(movieList);\n      console.log(movieList);\n      setPageNum((pageNum += 1));\n    }\n  }; */\n\n  const getMovies = async () => {\n    for (let i = 1; i <= 2; i++) {\n      const response = await fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=0babab01bb1ea08c91f4f577372025d6&language=en-US&page=\" + pageNum + \"&region=US\");\n      let data = await response.json();\n\n      for (let key in data.results) {\n        movie = {\n          movieData: data.results[key],\n          movieStatus: \"\",\n          movieDetails: \"\"\n        };\n        movieList.push(movie);\n      }\n\n      setMovieList(movieList);\n      setPageNum(pageNum += 1);\n    }\n  };\n\n  const getMovieDetails = async id => {\n    const response = await fetch(\"https://api.themoviedb.org/3/movie/\" + id + \"?api_key=0babab01bb1ea08c91f4f577372025d6&language=en-US\");\n    let data = await response.json();\n    movieDetails = data;\n    setMovieDetails(movieDetails); //console.log(movieDetails);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${historyIsOpen ? \"app-move\" : \"\"}`,\n    onClick: () => {\n      if (showModal === true) {\n        setShowModal(false);\n      }\n\n      if (showMovieModal === true) {\n        setShowMovieModal(false);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      historyIsOpen: historyIsOpen,\n      sethistoryIsOpen: sethistoryIsOpen,\n      showModal: showModal,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieCard, {\n      showMovieModal: showMovieModal,\n      setShowMovieModal: setShowMovieModal,\n      movieList: movieList,\n      setMovieList: setMovieList,\n      movieStatus: movieStatus,\n      setMovieStatus: setMovieStatus,\n      likedArray: likedArray,\n      setLikedArray: setLikedArray,\n      unlikedArray: unlikedArray,\n      setUnlikedArray: setUnlikedArray,\n      seenArray: seenArray,\n      setSeenArray: setSeenArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      historyIsOpen: historyIsOpen,\n      likedArray: likedArray,\n      unlikedArray: unlikedArray,\n      seenArray: seenArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vKLreZoOxX/qFwVsyA+HQBt2P0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/what-we-watchin/src/App.js"],"names":["Nav","MovieCard","History","React","useState","useEffect","Modal","App","historyIsOpen","sethistoryIsOpen","showModal","setShowModal","pageNum","setPageNum","movieStatus","setMovieStatus","movieList","setMovieList","showMovieModal","setShowMovieModal","movie","setMovie","movieDetails","setMovieDetails","likedArray","setLikedArray","unlikedArray","setUnlikedArray","seenArray","setSeenArray","getMovies","i","response","fetch","data","json","key","results","movieData","push","getMovieDetails","id"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Nav from \"./components/Nav.js\";\nimport MovieCard from \"./components/MovieCard.js\";\nimport History from \"./components/History.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/app.scss\";\nimport Modal from \"./components/Modal.js\";\n\nfunction App() {\n  //state\n  const [historyIsOpen, sethistoryIsOpen] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  let [pageNum, setPageNum] = useState(1);\n  const [movieStatus, setMovieStatus] = useState(\"\");\n  let [movieList, setMovieList] = useState([]);\n  const [showMovieModal, setShowMovieModal] = useState(false);\n  let [movie, setMovie] = useState({});\n  const [movieDetails, setMovieDetails] = useState();\n\n  //Arrays\n  const [likedArray, setLikedArray] = useState([]);\n  const [unlikedArray, setUnlikedArray] = useState([]);\n  const [seenArray, setSeenArray] = useState([]);\n\n  //useEffect\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  //functions\n  /*   const getMovies = async () => {\n    for (let i = 1; i <= 2; i++) {\n      const response = await fetch(\n        \"https://api.themoviedb.org/3/movie/popular?api_key=0babab01bb1ea08c91f4f577372025d6&language=en-US&page=\" +\n          pageNum +\n          \"&region=US\"\n      );\n      let data = await response.json();\n      for (let key in data.results) {\n        movieList.push(data.results[key]);\n      }\n      setMovieList(movieList);\n      console.log(movieList);\n      setPageNum((pageNum += 1));\n    }\n  }; */\n\n  const getMovies = async () => {\n    for (let i = 1; i <= 2; i++) {\n      const response = await fetch(\n        \"https://api.themoviedb.org/3/movie/popular?api_key=0babab01bb1ea08c91f4f577372025d6&language=en-US&page=\" +\n          pageNum +\n          \"&region=US\"\n      );\n      let data = await response.json();\n      for (let key in data.results) {\n        movie = {\n          movieData: data.results[key],\n          movieStatus: \"\",\n          movieDetails: \"\",\n        };\n        movieList.push(movie);\n      }\n      setMovieList(movieList);\n      setPageNum((pageNum += 1));\n    }\n  };\n\n  const getMovieDetails = async (id) => {\n    const response = await fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        id +\n        \"?api_key=0babab01bb1ea08c91f4f577372025d6&language=en-US\"\n    );\n    let data = await response.json();\n    movieDetails = data;\n    setMovieDetails(movieDetails);\n    //console.log(movieDetails);\n  };\n\n  return (\n    <div\n      className={`app ${historyIsOpen ? \"app-move\" : \"\"}`}\n      onClick={() => {\n        if (showModal === true) {\n          setShowModal(false);\n        }\n        if (showMovieModal === true) {\n          setShowMovieModal(false);\n        }\n      }}\n    >\n      <Modal showModal={showModal} />\n      <Nav\n        historyIsOpen={historyIsOpen}\n        sethistoryIsOpen={sethistoryIsOpen}\n        showModal={showModal}\n        setShowModal={setShowModal}\n      />\n      <MovieCard\n        showMovieModal={showMovieModal}\n        setShowMovieModal={setShowMovieModal}\n        movieList={movieList}\n        setMovieList={setMovieList}\n        movieStatus={movieStatus}\n        setMovieStatus={setMovieStatus}\n        likedArray={likedArray}\n        setLikedArray={setLikedArray}\n        unlikedArray={unlikedArray}\n        setUnlikedArray={setUnlikedArray}\n        seenArray={seenArray}\n        setSeenArray={setSeenArray}\n      />\n      <History\n        historyIsOpen={historyIsOpen}\n        likedArray={likedArray}\n        unlikedArray={unlikedArray}\n        seenArray={seenArray}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}